{"componentChunkName":"component---src-templates-blog-post-js","path":"/javascript/javascript-06DataType/","result":{"data":{"site":{"siteMetadata":{"title":"Jiman's Blog","author":"Jeong Jiman","siteUrl":"https://gatsby-starter-bee.netlify.com","comment":{"disqusShortName":"","utterances":"JaeYeopHan/gatsby-starter-bee"},"sponsor":{"buyMeACoffeeId":"jbee"}}},"markdownRemark":{"id":"7f0986cd-24fe-5823-9566-b8b3ad82a5ff","excerpt":"데이터 타입 데이터 타입은 값의 종류이다. 모든 값은 데이터 타입을 갖는다. 값의 종류 원시 타입 (primitive type) number 정수 실수 구분 없이 실수타입 하나만 존재 string boolean undefined null symbol es6 에서 새로 추가 객체 타입(object/reference type) 객체 함수 배열 etc… 타입 마다 생성한 목적, 용도, 메모리 공간 크기, 저장되는 2진수, 해석하는 방식 전부 다르다 1. 숫자 타입(number…","html":"<h1 id=\"데이터-타입\" style=\"position:relative;\"><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%83%80%EC%9E%85\" aria-label=\"데이터 타입 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>데이터 타입</h1>\n<ul>\n<li>데이터 타입은 <strong>값의 종류</strong>이다.</li>\n<li><strong>모든 값</strong>은 데이터 타입을 갖는다.</li>\n</ul>\n<h2 id=\"값의-종류\" style=\"position:relative;\"><a href=\"#%EA%B0%92%EC%9D%98-%EC%A2%85%EB%A5%98\" aria-label=\"값의 종류 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>값의 종류</h2>\n<ol>\n<li><strong>원시 타입 (primitive type)</strong></li>\n<li>\n<p>number</p>\n<ul>\n<li><strong>정수 실수 구분 없이</strong> 실수타입 하나만 존재</li>\n</ul>\n</li>\n<li>string</li>\n<li>boolean</li>\n<li>undefined</li>\n<li>null</li>\n<li>\n<p>symbol</p>\n<ul>\n<li>es6 에서 새로 추가</li>\n</ul>\n</li>\n<li><strong>객체 타입(object/reference type)</strong></li>\n<li>객체</li>\n<li>함수</li>\n<li>배열</li>\n<li>etc…</li>\n</ol>\n<p><em>타입 마다 생성한 목적, 용도, 메모리 공간 크기, 저장되는 2진수, 해석하는 방식 전부 다르다</em></p>\n<h2 id=\"1-숫자-타입number\" style=\"position:relative;\"><a href=\"#1-%EC%88%AB%EC%9E%90-%ED%83%80%EC%9E%85number\" aria-label=\"1 숫자 타입number permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 숫자 타입(number)</h2>\n<ul>\n<li>하나의 숫자 타입만 존재 (실수)</li>\n<li>64비트 부동소수점 형식</li>\n<li>\n<p>정수, 실수, 2진수, 8진수, 16진수 리터럴이 <strong>모두</strong> <strong>배정밀도 64비트 부동소수점 형식의 2진수</strong>로 저장</p>\n<ul>\n<li>예시</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">var binary = 0b01000001; // 2진수\nvar octal = 0o101; // 8진수\nvar hex = 0x41; // 16진수\n\nconsole.log(binary);//65\nconsole.log(octal); // 65\nconsole.log(hex); // 65</code></pre></div>\n</li>\n</ul>\n<h3 id=\"정수로-표시된-수도-실수로-처리한다\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EC%88%98%EB%A1%9C-%ED%91%9C%EC%8B%9C%EB%90%9C-%EC%88%98%EB%8F%84-%EC%8B%A4%EC%88%98%EB%A1%9C-%EC%B2%98%EB%A6%AC%ED%95%9C%EB%8B%A4\" aria-label=\"정수로 표시된 수도 실수로 처리한다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정수로 표시된 수도 실수로 처리한다</h3>\n<ul>\n<li>한가지 저장방식만을 따르기때문에 정수로 표기된 수도 연산시 실수로 나올 수 있다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">console.log(3/2); // 1.5</code></pre></div>\n<h3 id=\"특이사항\" style=\"position:relative;\"><a href=\"#%ED%8A%B9%EC%9D%B4%EC%82%AC%ED%95%AD\" aria-label=\"특이사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>특이사항</h3>\n<p>특별한 값 세가지 표현가능</p>\n<ul>\n<li>Infinity : 양의 무한대</li>\n<li>-Infinity : 음의 무한대</li>\n<li>NaN : 산술 연산 불가(not a number)</li>\n</ul>\n<h2 id=\"2-문자열-타입string\" style=\"position:relative;\"><a href=\"#2-%EB%AC%B8%EC%9E%90%EC%97%B4-%ED%83%80%EC%9E%85string\" aria-label=\"2 문자열 타입string permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 문자열 타입(string)</h2>\n<ul>\n<li>텍스트 데이터를 나타냄</li>\n<li>0개이상의 16비트 유니코드 문자(UTF-16) 의 집합</li>\n<li>\n<p>일반적으로 작은따옴표’ ’ 사용</p>\n<ul>\n<li>따옴표로 감싸지 않으면 엔진이 토큰으로 인식</li>\n<li>따옴표 내의 다른 따옴표는 문자열로 인식</li>\n</ul>\n</li>\n<li>원시타입이며 생성후 변경 될 수 없다.</li>\n</ul>\n<h3 id=\"템플릿-리터럴template-literal\" style=\"position:relative;\"><a href=\"#%ED%85%9C%ED%94%8C%EB%A6%BF-%EB%A6%AC%ED%84%B0%EB%9F%B4template-literal\" aria-label=\"템플릿 리터럴template literal permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>템플릿 리터럴(template literal)</h3>\n<ul>\n<li>es6에 도입된 문자열 표기법</li>\n<li>백틱 <code class=\"language-text\"></code> 사용</li>\n<li><strong>멀티라인 문자열/ 표현식 삽입/ 태그드 템플릿</strong> 등 처리 기능 제공</li>\n</ul>\n<h4 id=\"멀티라인-문자열\" style=\"position:relative;\"><a href=\"#%EB%A9%80%ED%8B%B0%EB%9D%BC%EC%9D%B8-%EB%AC%B8%EC%9E%90%EC%97%B4\" aria-label=\"멀티라인 문자열 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>멀티라인 문자열</h4>\n<ul>\n<li>\n<p>일반 문자열에는 개행 미허용</p>\n<ul>\n<li>공백을 표현하려면 이스케이프 시퀀스(escape sequence) 사용해야됨 ( \\n )</li>\n</ul>\n</li>\n<li>템플릿 리터럴 내에서는 이스케이프 시퀀스를 사용하지 않고도 개행과 공백이 있는 그대로 적용된다.</li>\n</ul>\n<h4 id=\"표현식-삽입\" style=\"position:relative;\"><a href=\"#%ED%91%9C%ED%98%84%EC%8B%9D-%EC%82%BD%EC%9E%85\" aria-label=\"표현식 삽입 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>표현식 삽입</h4>\n<ul>\n<li>문자열을 연결할 때 보통 연결 연산자 + 를 사용한다.</li>\n<li>템플릿 리터럴 내에서 표현식 삽입 (expression interpolation)을 통해 간단히 문자열 삽입가능</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">var country = &#39;Korea&#39;;\nvar city = &#39;Seoul&#39;;\n\nconsole.log(`I live in ${city}, ${country}`);// I live in Seoul, Korea;</code></pre></div>\n<ul>\n<li>\n<p>${}으로 표현식을 감싸서 삽입한다.</p>\n<ul>\n<li>표현식의 평가값은 문자열로 타입 변환</li>\n<li>템플릿 리터럴 내에서만 사용</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"3-불리언-타입boolean\" style=\"position:relative;\"><a href=\"#3-%EB%B6%88%EB%A6%AC%EC%96%B8-%ED%83%80%EC%9E%85boolean\" aria-label=\"3 불리언 타입boolean permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 불리언 타입(boolean)</h2>\n<ul>\n<li>논리적 참, 거짓 <strong>true/false</strong></li>\n<li>조건문에서 주로 사용</li>\n</ul>\n<h2 id=\"4-undefined-타입\" style=\"position:relative;\"><a href=\"#4-undefined-%ED%83%80%EC%9E%85\" aria-label=\"4 undefined 타입 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. undefined 타입</h2>\n<ul>\n<li>undefined 로 유일한 값을 가짐</li>\n<li>\n<p>var 키워도로 변수 선언시 암묵적으로 undefined 로 초기화</p>\n<ul>\n<li>변수에 할당 전에 undefined 로 암묵적 할당</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"개발자가-의도적으로-할당하는-것은-지양\" style=\"position:relative;\"><a href=\"#%EA%B0%9C%EB%B0%9C%EC%9E%90%EA%B0%80-%EC%9D%98%EB%8F%84%EC%A0%81%EC%9C%BC%EB%A1%9C-%ED%95%A0%EB%8B%B9%ED%95%98%EB%8A%94-%EA%B2%83%EC%9D%80-%EC%A7%80%EC%96%91\" aria-label=\"개발자가 의도적으로 할당하는 것은 지양 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>개발자가 의도적으로 할당하는 것은 지양</h4>\n<ul>\n<li>\n<p>undefined의 본래 취지와 어긋남</p>\n<ul>\n<li>쓰레기값이 할당되지 않도록 자바스크립트 엔진이 암묵적으로 undefined 할당 하는 것이 본래 이유</li>\n</ul>\n</li>\n<li>변수에 값이 없다는 것을 개발자 임의로 명시하고 싶을 땐 null 할당</li>\n</ul>\n<h4 id=\"자바스크립트에서는-선언과-정의의-경계가-모호하다\" style=\"position:relative;\"><a href=\"#%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8%EC%97%90%EC%84%9C%EB%8A%94-%EC%84%A0%EC%96%B8%EA%B3%BC-%EC%A0%95%EC%9D%98%EC%9D%98-%EA%B2%BD%EA%B3%84%EA%B0%80-%EB%AA%A8%ED%98%B8%ED%95%98%EB%8B%A4\" aria-label=\"자바스크립트에서는 선언과 정의의 경계가 모호하다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>자바스크립트에서는 선언과 정의의 경계가 모호하다</h4>\n<ul>\n<li>다른 언어에서는 보통 선언은 <strong>식별자의 존재만 알리는 것</strong>이고 정의는 <strong>식별자와 메모리 주소를 연결</strong>하는 것이다.</li>\n<li>자바스크립트에서는 선언 이후에 자동으로 정의가 이루어진다.</li>\n<li>\n<p>ECMAScript 사양에서 변수는 선언으로 표현/ 함수는 정의로 표현</p>\n<ul>\n<li>이를 반영하여 변수는 선언, 함수는 정의로 표현하도록 하자</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"5-null-타입\" style=\"position:relative;\"><a href=\"#5-null-%ED%83%80%EC%9E%85\" aria-label=\"5 null 타입 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. null 타입</h2>\n<ul>\n<li>null 로 유일한 값을 가짐</li>\n<li>변수에 값이 없다는것을 개발자 의도적으로 명시/ 이전에 참조하던 값을 더이상 참조 안한다/ 즉 값의 제거를 의미</li>\n<li>대소문자 구별!</li>\n</ul>\n<h3 id=\"언제-사용하는가-어떤-의미인가\" style=\"position:relative;\"><a href=\"#%EC%96%B8%EC%A0%9C-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94%EA%B0%80-%EC%96%B4%EB%96%A4-%EC%9D%98%EB%AF%B8%EC%9D%B8%EA%B0%80\" aria-label=\"언제 사용하는가 어떤 의미인가 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>언제 사용하는가/ 어떤 의미인가</h3>\n<ul>\n<li>개발자가 의도적으로 변수에 값이 없다는 것을 명시</li>\n<li>이전에 참조하던 값을 더이상 참조 안한다</li>\n<li>값을 제거 하였다</li>\n<li>\n<p>함수가 유효한 값을 반환할 수 없을때 null을 반환하기도함</p>\n<ul>\n<li>null 보다 undefined 반환이 타당하다는 의견도 있음</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"6-symbol-타입\" style=\"position:relative;\"><a href=\"#6-symbol-%ED%83%80%EC%9E%85\" aria-label=\"6 symbol 타입 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6. symbol 타입</h2>\n<ul>\n<li>es6 에서 새로 추가된 원시 타입 값</li>\n<li>다른 값과 중복되지 않는 유일무이한 값</li>\n</ul>\n<h3 id=\"사용예시\" style=\"position:relative;\"><a href=\"#%EC%82%AC%EC%9A%A9%EC%98%88%EC%8B%9C\" aria-label=\"사용예시 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>사용예시</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">var key = Symbol(&#39;key&#39;);\nconsole.log(typeof key); // symbol\n\nvar obj = {};\n\nobj[key] = &#39;special value&#39;\nconsole.log(obj[key]); // special value</code></pre></div>\n<h2 id=\"7-객체-타입\" style=\"position:relative;\"><a href=\"#7-%EA%B0%9D%EC%B2%B4-%ED%83%80%EC%9E%85\" aria-label=\"7 객체 타입 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>7. 객체 타입</h2>\n<ul>\n<li>앞의 6가지 원시타입 (primitive type) 이외에는 전부 객체 타입</li>\n<li>자바스크립트는 객체 기반의 언어, 즉 거의 모든것이 객체</li>\n<li>자세한 내용은 추후 학습</li>\n</ul>\n<h2 id=\"데이터-타입은-왜-필요한가\" style=\"position:relative;\"><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%83%80%EC%9E%85%EC%9D%80-%EC%99%9C-%ED%95%84%EC%9A%94%ED%95%9C%EA%B0%80\" aria-label=\"데이터 타입은 왜 필요한가 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>데이터 타입은 왜 필요한가</h2>\n<p>크게 세가지로 정리할 수 있다</p>\n<ol>\n<li>값을 <strong>저장</strong>할 때 확보해야 하는 메모리 공간의 크기를 결정</li>\n<li>값의 낭비나 손실없이 저장할 수 있어야 한다</li>\n<li>데이터 타입에 따라 정해진 크기의 메모리 공간 확보</li>\n<li>ex ) 숫자 타입은 64비트 부동소수점 형식이므로 8바이트의 메모리공간을 확보</li>\n<li>문자열과 숫자 이외에 데이터 타입의 크기는사양에서 명시하지 않아서 엔진 제조사의 구현에따라 다를 수도 있다.</li>\n<li>값을 <strong>참조</strong>할때 한번에 읽어들일 메모리 크기 결정</li>\n<li>메모리에서 읽어들인 2진수를 어떻게 해석할 지 결정</li>\n</ol>\n<h2 id=\"동적-타이핑\" style=\"position:relative;\"><a href=\"#%EB%8F%99%EC%A0%81-%ED%83%80%EC%9D%B4%ED%95%91\" aria-label=\"동적 타이핑 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>동적 타이핑</h2>\n<p>정적을 static, 동적을 dynamic 이라고 한다. 프로그래밍 언어 관점에서는 정적이 더 좋긴 하다. 동적은 변한다, 정적은 변하지 않는다로 받아들이자.</p>\n<h3 id=\"동적-타입-언어--정적-타입언어\" style=\"position:relative;\"><a href=\"#%EB%8F%99%EC%A0%81-%ED%83%80%EC%9E%85-%EC%96%B8%EC%96%B4--%EC%A0%95%EC%A0%81-%ED%83%80%EC%9E%85%EC%96%B8%EC%96%B4\" aria-label=\"동적 타입 언어  정적 타입언어 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>동적 타입 언어 &#x26; 정적 타입언어</h3>\n<p>동적 타입은 타입이 변한다는 개념으로 받아들이면된다.</p>\n<p>변수선언은 var 키워드를 선언하고 변수이름을 적으면 선언이 된다.</p>\n<p>var로 선언한 변수에는 모든 타입의 값이 들어갈 수 있다.</p>\n<p>대부분의 언어는 정적 타입언어이다. 대표적으로 c 언어 같은 경우 타입별로 변수선언 키워드가 다르다. 즉 변수의 타입마다 할당할 수 있는 값이다르다.</p>\n<p>동적타입언어인 자바스크립트는 숫자의 경우 하나의 타입이 존재한다.</p>\n<h4 id=\"어떤게-좋을까\" style=\"position:relative;\"><a href=\"#%EC%96%B4%EB%96%A4%EA%B2%8C-%EC%A2%8B%EC%9D%84%EA%B9%8C\" aria-label=\"어떤게 좋을까 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>어떤게 좋을까?</h4>\n<p>동적타입언어가 편하긴하지만 이걸로 인해서 에러가 발생할 수 있는 여지가 있다.</p>\n<p>웹페이지에서 보조적인 기능을 하기 때문에 한사람을 위해서 만들어진 언어였다. 하지만 협업이 많이 일어나고 큰 규모의 프로그래밍을 하고 있다. 지금은 에러발생가능성이 높아졌기 때문에 큰 문제이다.</p>\n<p>즉 한번 정해진타입이 안바뀌는게 개발자에게 좋기 때문에 정적 타입언어가 좋다고 보여진다.</p>\n<p>자바스크에서 변수는 잘써야 한다. 동적 타입언어기 때문이다. 변수 안에 들어가 있는 값을 타입오브로 확인하지 않으면 언제든지 실수가 발생할 수 있다. 예상과 다른 값이 들어갈 수 있다는 말이다.</p>\n<p>변수가 많으면 많을수록 오류의 개수가 많이질 수 있다.</p>\n<h4 id=\"변수의-개수는-적은게-좋다\" style=\"position:relative;\"><a href=\"#%EB%B3%80%EC%88%98%EC%9D%98-%EA%B0%9C%EC%88%98%EB%8A%94-%EC%A0%81%EC%9D%80%EA%B2%8C-%EC%A2%8B%EB%8B%A4\" aria-label=\"변수의 개수는 적은게 좋다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>변수의 개수는 적은게 좋다.</h4>\n<p>변수가 1000개인 프로그램이 100개인 프로그램이 오류 가능성이 높다. 변수를 줄일 수 없다라고 하면 생명주기를 짧게하여 빨리 죽이는게 좋다.</p>\n<p>다음을 지키도록하자</p>\n<ul>\n<li>전역변수를 사용하지 않는다.</li>\n<li>변수보다는 상수를 사용합니다.</li>\n<li>변수이름은 심사숙고해서 지어야 한다.</li>\n</ul>","frontmatter":{"title":"06DataType","date":"August 25, 2020"}}},"pageContext":{"slug":"/javascript/javascript-06DataType/","previous":{"fields":{"slug":"/javascript/javascript-05Expression-Statement/"},"frontmatter":{"title":"javascript 05Expression&Statement","category":"javascript","draft":false}},"next":{"fields":{"slug":"/javascript/javascript-07Operator/"},"frontmatter":{"title":"07Operator","category":"javascript","draft":false}}}},"staticQueryHashes":["2486386679","3128451518"]}