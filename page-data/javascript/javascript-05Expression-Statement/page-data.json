{"componentChunkName":"component---src-templates-blog-post-js","path":"/javascript/javascript-05Expression-Statement/","result":{"data":{"site":{"siteMetadata":{"title":"Jiman's Blog","author":"Jeong Jiman","siteUrl":"https://gatsby-starter-bee.netlify.com","comment":{"disqusShortName":"","utterances":"JaeYeopHan/gatsby-starter-bee"},"sponsor":{"buyMeACoffeeId":"jbee"}}},"markdownRemark":{"id":"e4a15d2f-6bb7-5628-a595-d52b54e3ba59","excerpt":"표현식과 문 keyword : 값, 리터럴, 표현식, 문 용어 정리 값 : 식이 평가되어 생성된 결과 생성된 결과는 메모리에 저장된다. 표현식은 곧 값으로 평가된다. 리터럴 : 사람이 이해할 수 있는 문자 또는 약속된 기호를 사용해 값을 생성하는 표기방식 뇌피셜로는.. 자바스크립트 엔진으로 하여금 ‘리터럴 a 는 b…","html":"<h1 id=\"표현식과-문\" style=\"position:relative;\"><a href=\"#%ED%91%9C%ED%98%84%EC%8B%9D%EA%B3%BC-%EB%AC%B8\" aria-label=\"표현식과 문 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>표현식과 문</h1>\n<h2 id=\"keyword--값-리터럴-표현식-문\" style=\"position:relative;\"><a href=\"#keyword--%EA%B0%92-%EB%A6%AC%ED%84%B0%EB%9F%B4-%ED%91%9C%ED%98%84%EC%8B%9D-%EB%AC%B8\" aria-label=\"keyword  값 리터럴 표현식 문 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>keyword : 값, 리터럴, 표현식, 문</h2>\n<h3 id=\"용어-정리\" style=\"position:relative;\"><a href=\"#%EC%9A%A9%EC%96%B4-%EC%A0%95%EB%A6%AC\" aria-label=\"용어 정리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>용어 정리</h3>\n<ul>\n<li>값 : 식이 평가되어 생성된 결과</li>\n<li>생성된 결과는 메모리에 저장된다.</li>\n<li>표현식은 곧 값으로 평가된다.</li>\n<li>리터럴 : 사람이 이해할 수 있는 문자 또는 약속된 기호를 사용해 값을 생성하는 표기방식</li>\n<li>뇌피셜로는.. 자바스크립트 엔진으로 하여금 ‘리터럴 a 는 b다’라고 해석하도록 미리 설정해놓은 값들의 집합?</li>\n<li>표현식 : 값으로 평가되는 문</li>\n<li>리터럴도 값으로 생성된다 >> 리터럴도 표현식</li>\n<li>연산자 표현식도 평가되어 값 생성 >> 연산자 표현식도 표현식</li>\n<li>식별자도 참조하면 값으로 평가 >> 식별자 참조도 표현식</li>\n<li>결론: 값으로 평가되는건 전부 표현식</li>\n<li>문 : 프로그램을 구성하는 기본단위이자 최소 실행 단위</li>\n<li>토큰 : 문법적인 의미를 가지며, 더 이상 나눌 수 없는 코드의 기본 요소(국어로 따지면 형태소쯤..?)</li>\n<li>문은 여러 토큰으로 이루어짐</li>\n<li>문의 종류로는 선언문, 조건문 반복문 등이 있다.</li>\n<li>문의 집합이 곧 프로그램</li>\n</ul>\n<h2 id=\"1-값\" style=\"position:relative;\"><a href=\"#1-%EA%B0%92\" aria-label=\"1 값 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 값</h2>\n<p>값(value)은 식(표현식, expression)이 평가(evaluate)되어 생성된 결과를 말한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">10 + 20; //30</code></pre></div>\n<p>10은 값이다 20은 값이다. 변수는 하나의 값을 저장하기 위해 확보한 메모리 공간 자체 또는 그 메모리 공간을 식별할 수 있는 이름이다. 변수 안에 하나의 값이 들어간다. 하나의 값을 위해 확보한 메모리 공간이 변수이다.</p>\n<p>즉, 메모리 공간 안에 들어갈 수 있는 것이 값이다.</p>\n<p><code class=\"language-text\">위 식을 다시 이해해보자</code></p>\n<p>10 + 20 을 cpu가 계산해서 30이라는 결과가 나왔고 그 결과값도 메모리에 저장된다. 순서가있다. 10이라는 값을 만들고, 20이라는 기호를 가지고 20이라는 2진수값을 만들어서 메모리에 저장한다. 3번째로 +를 수행한다. 10 과 20 이 메모리 공간내에 값으로 저장되어있는 것이 전제가 되어야 하기 때문이다. 그 다음에 30이라는 새로운 값이 만들어진다. 값의 생성된다. 휘발유 처럼 날라가는 게아니고 메모리 상에 들어간다 .</p>\n<p>**값은 표현식이 평가된 결과이다. **</p>\n<p>10도 값을 만드는 것이고 20 도 값을 만드는 것이고 10 + 20도 값을 만든다.</p>\n<p>10 + 20이 새로운 값을 만들어냈다. 라고 표현한다. 10 + 20 이 평가되어 숫자 값 30을 생성했다라고 표현한다.</p>\n<p>10 + 20이라는 것이 <strong>평가</strong>된 결과가 값이다.</p>\n<p>평가는 값을 생성해서 메모리에 집어넣는것이다.</p>\n<p>아래 식의 할당을 이해해보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">var sum = 10 + 20;</code></pre></div>\n<p>sum 이 등록되어있는지 확인한다. 할당할 수 있다고 판단한 후 10 + 20을 평가한다. 30이 메모리 공간에 저장되고 sum 이 그 메모리 공간을 가리킨다.</p>\n<h2 id=\"리터럴\" style=\"position:relative;\"><a href=\"#%EB%A6%AC%ED%84%B0%EB%9F%B4\" aria-label=\"리터럴 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>리터럴</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">3</code></pre></div>\n<p>우리가 코드에 3을 썼다면 값을 만들라고 컴퓨터에게 명령하는 것이다. 컴퓨터가 숫자 값3을 만들어서 메모리에 저장한다.</p>\n<p>리터럴을 정의해보면 사람이 이해할 수 있는 문자 또는 약속된 기호를 사용해 <strong>값을 생성하는 표기 방식(notation)</strong>이다.</p>\n<p>숫자를 타이핑하면 순수한 텍스트 3이다. 실행을 시키면 평가가 일어나고, 평가가 되면 3이라는 이진수 값을 생성해서 집어넣는다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">// 정수 리터럴\n100\n//부동소수점 리터럴\n10.5\n// 2진수 리터럴(ob로 시작)\n0b01000001\n// 8진수 리터럴\n0o101\n//16진수 리터럴\n0x41\n\n//문자열 리터럴\n//문자열을 바로 만들 수 있다 &gt; 자바스크립트의 장점\n&quot;Hello&quot;\n&quot;World&quot;\n\n//불리언 리터럴\ntrue\nfalse\n\n// null 리터럴\nnull\n\n// undefined 리터럴\nundefined\n\n\n//여러개의 값을 하나의 값처럼 사용하는 data structure\n// 객체 리터럴\n{ name: &#39;Lee&#39;, address: &#39;Seoul&#39;}\n\n// 배열 리터럴\n[1, 2, 3]\n\n\n// 함수 리터럴\nfunction(){}\n\n// 정규 표현식 리터럴\n/[A-Z]+/g</code></pre></div>\n<h2 id=\"표현식\" style=\"position:relative;\"><a href=\"#%ED%91%9C%ED%98%84%EC%8B%9D\" aria-label=\"표현식 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>표현식</h2>\n<p>값으로 평가될 수 있는 문(statement)이다.</p>\n<p>문은 프로그램을 구성하는 기본단위하다.</p>\n<p>코딩할때 문을 만드는 것이다.</p>\n<p>문과 표현식의 차이</p>\n<p>문은 구와 절로 구성된다. 문장의 구성요소들을 컴퓨터 공학에서는 토큰이라고 부른다.</p>\n<p>토큰이 뭉쳐서 하나의 명령이 된다.</p>\n<p>실행될 수 있으면 모두 문이다</p>\n<p>최소 실행단위이다. 문이 실행되면 무슨일인가가 일어난다 (에러포함)</p>\n<p>표현식인 문이 있고 표현식이 아닌문이있다.</p>\n<h2 id=\"세미콜론\" style=\"position:relative;\"><a href=\"#%EC%84%B8%EB%AF%B8%EC%BD%9C%EB%A1%A0\" aria-label=\"세미콜론 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>세미콜론</h2>\n<p>문의 끝을 명확히하고 컴퓨터에게 최소 실행 단위를 알려주기 위해서 사용한다. 컴퓨터가 헷갈리지 않게 하기 위함이다.</p>\n<p>보통 프로그래밍 언어에서 문의 종료를</p>\n<ul>\n<li>줄바꿈</li>\n<li>세미콜론</li>\n</ul>\n<p>로 표현하는데 자바스크립트는 세미콜론을 사용한다.</p>\n<p>줄바꿈이 있어도 엔진이 문의 종료라고 추정하고 세미콜론을 붙여준다.</p>\n<p>이를 세미콜론 자동삽입기능이라고 한다. (ASI)</p>\n<h3 id=\"완료값\" style=\"position:relative;\"><a href=\"#%EC%99%84%EB%A3%8C%EA%B0%92\" aria-label=\"완료값 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>완료값</h3>\n<p>표현식이 아닌문을 실행하면 undefined 를 출력한다. 다만 평가 결과가 아니므로 값으로 기능하지 않는다.</p>","frontmatter":{"title":"javascript 05Expression&Statement","date":"August 24, 2020"}}},"pageContext":{"slug":"/javascript/javascript-05Expression-Statement/","previous":{"fields":{"slug":"/javascript/javascript-04Variable/"},"frontmatter":{"title":"javascript 04Variable","category":"javascript","draft":false}},"next":{"fields":{"slug":"/javascript/javascript-06DataType/"},"frontmatter":{"title":"06DataType","category":"javascript","draft":false}}}},"staticQueryHashes":["2486386679","3128451518"]}