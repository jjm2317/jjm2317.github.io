{"componentChunkName":"component---src-templates-blog-post-js","path":"/javascript/javascript-restAPI-TodoList/","result":{"data":{"site":{"siteMetadata":{"title":"Jiman's Blog","author":"Jeong Jiman","siteUrl":"https://gatsby-starter-bee.netlify.com","comment":{"disqusShortName":"","utterances":"JaeYeopHan/gatsby-starter-bee"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"c26883c3-0168-5e1f-8903-4b2996df4583","excerpt":"REST API 로 TodoList 구현 todos.js (saved in ./data) index.html style.css app.js server.js","html":"<h1 id=\"rest-api-로-todolist-구현\" style=\"position:relative;\"><a href=\"#rest-api-%EB%A1%9C-todolist-%EA%B5%AC%ED%98%84\" aria-label=\"rest api 로 todolist 구현 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>REST API 로 TodoList 구현</h1>\n<h2 id=\"todosjs-saved-in-data\" style=\"position:relative;\"><a href=\"#todosjs-saved-in-data\" aria-label=\"todosjs saved in data permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>todos.js (saved in ./data)</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const todos = [\n  { id: 1, content: &#39;HTML&#39;, completed: false },\n  { id: 2, content: &#39;CSS&#39;, completed: true },\n  { id: 3, content: &#39;Javascript&#39;, completed: false },\n].sort((t1, t2) =&gt; t2.id - t1.id);\n\nexports.todos = todos;</code></pre></div>\n<h2 id=\"indexhtml\" style=\"position:relative;\"><a href=\"#indexhtml\" aria-label=\"indexhtml permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>index.html</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n  &lt;meta charset=&quot;UTF-8&quot;&gt;\n  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;\n  &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt;\n  &lt;title&gt;Todos 4.0&lt;/title&gt;\n  &lt;link href=&quot;css/style.css&quot; rel=&quot;stylesheet&quot;&gt;\n  &lt;script defer src=&quot;js/app.js&quot;&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n  &lt;div class=&quot;container&quot;&gt;\n    &lt;h1 class=&quot;title&quot;&gt;Todos&lt;/h1&gt;\n    &lt;div class=&quot;ver&quot;&gt;4.0&lt;/div&gt;\n\n    &lt;input class=&quot;input-todo&quot; placeholder=&quot;What needs to be done?&quot; autofocus&gt;\n    &lt;ul class=&quot;nav&quot;&gt;\n      &lt;li id=&quot;all&quot; class=&quot;active&quot;&gt;All&lt;/li&gt;\n      &lt;li id=&quot;active&quot;&gt;Active&lt;/li&gt;\n      &lt;li id=&quot;completed&quot;&gt;Completed&lt;/li&gt;\n    &lt;/ul&gt;\n    &lt;ul class=&quot;todos&quot;&gt;\n      &lt;!-- &lt;li id=&quot;myId&quot; class=&quot;todo-item&quot;&gt;\n        &lt;input id=&quot;ck-myId&quot; class=&quot;checkbox&quot; type=&quot;checkbox&quot;&gt;\n        &lt;label for=&quot;ck-myId&quot;&gt;HTML&lt;/label&gt;\n        &lt;i class=&quot;remove-todo far fa-times-circle&quot;&gt;&lt;/i&gt;\n      &lt;/li&gt; --&gt;\n    &lt;/ul&gt;\n    &lt;footer&gt;\n      &lt;div class=&quot;complete-all&quot;&gt;\n        &lt;input class=&quot;checkbox&quot; type=&quot;checkbox&quot; id=&quot;ck-complete-all&quot;&gt;\n        &lt;label for=&quot;ck-complete-all&quot;&gt;Mark all as complete&lt;/label&gt;\n      &lt;/div&gt;\n      &lt;div class=&quot;clear-completed&quot;&gt;\n        &lt;button class=&quot;btn&quot;&gt;Clear completed (&lt;span class=&quot;completed-todos&quot;&gt;0&lt;/span&gt;)&lt;/button&gt;\n        &lt;strong class=&quot;active-todos&quot;&gt;0&lt;/strong&gt; items left\n      &lt;/div&gt;\n    &lt;/footer&gt;\n  &lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;</code></pre></div>\n<h2 id=\"stylecss\" style=\"position:relative;\"><a href=\"#stylecss\" aria-label=\"stylecss permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>style.css</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">@import url(&#39;https://fonts.googleapis.com/css?family=Roboto:100,300,400,700%7CNoto+Sans+KR&#39;);\n@import url(&#39;https://use.fontawesome.com/releases/v5.5.0/css/all.css&#39;);\n* {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n}\nbody {\n  font-family: &#39;Roboto&#39;, &#39;Noto Sans KR&#39;, sans-serif;\n  font-size: 0.9em;\n  color: #58666E;\n  background-color: #F0F3F4;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n.container {\n  max-width: 750px;\n  min-width: 450px;\n  margin: 0 auto;\n  padding: 15px;\n}\n.title {\n  /* margin: 10px 0; */\n  font-size: 4.5em;\n  font-weight: 100;\n  text-align: center;\n  color: #23B7E5;\n}\n.ver {\n  font-weight: 100;\n  text-align: center;\n  color: #23B7E5;\n  margin-bottom: 30px;\n}\n/* .input-todo  */\n.input-todo {\n  display: block;\n  width: 100%;\n  height: 45px;\n  padding: 10px 16px;\n  font-size: 18px;\n  line-height: 1.3333333;\n  color: #555;\n  border: 1px solid #ccc;\n  border-color: #E7ECEE;\n  border-radius: 6px;\n  outline: none;\n  transition: border-color ease-in-out .15s,box-shadow ease-in-out .15s;\n}\n.input-todo:focus {\n  border-color: #23B7E5;\n  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 8px rgba(102, 175, 233, 0.6);\n}\n.input-todo::-webkit-input-placeholder {\n  color: #999;\n}\n/* .nav */\n.nav {\n  display: flex;\n  margin: 15px;\n  list-style: none;\n}\n.nav &gt; li {\n  padding: 4px 10px;\n  border-radius: 4px;\n  cursor: pointer;\n}\n.nav &gt; li.active {\n  color: #fff;\n  background-color: #23B7E5;\n}\n.todos {\n  margin-top: 20px;\n}\n/* .todo-item */\n.todo-item {\n  position: relative;\n  /* display: block; */\n  height: 50px;\n  padding: 10px 15px;\n  margin-bottom: -1px;\n  background-color: #fff;\n  border: 1px solid #ddd;\n  border-color: #E7ECEE;\n  list-style: none;\n}\n.todo-item:first-child {\n  border-top-left-radius: 4px;\n  border-top-right-radius: 4px;\n}\n.todo-item:last-child {\n  border-bottom-left-radius: 4px;\n  border-bottom-right-radius: 4px;\n}\n/*\n  .checkbox\n  .checkbox 바로 뒤에 위치한 label의 before와 after를 사용해\n  .checkbox의 외부 박스와 내부 박스를 생성한다.\n  &lt;input class=&quot;checkbox&quot; type=&quot;checkbox&quot; id=&quot;myId&quot;&gt;\n  &lt;label for=&quot;myId&quot;&gt;Content&lt;/label&gt;\n*/\n.checkbox {\n  display: none;\n}\n.checkbox + label {\n  position: absolute; /* 부모 위치를 기준으로 */\n  top: 50%;\n  left: 15px;\n  transform: translate3d(0, -50%, 0);\n  display: inline-block;\n  width: 90%;\n  line-height: 2em;\n  padding-left: 35px;\n  cursor: pointer;\n  user-select: none;\n}\n.checkbox + label:before {\n  content: &quot;&quot;;\n  position: absolute;\n  top: 50%;\n  left: 0;\n  transform: translate3d(0, -50%, 0);\n  width: 20px;\n  height: 20px;\n  background-color: #fff;\n  border: 1px solid #CFDADD;\n}\n.checkbox:checked + label:after {\n  content: &quot;&quot;;\n  position: absolute;\n  top: 50%;\n  left: 6px;\n  transform: translate3d(0, -50%, 0);\n  width: 10px;\n  height: 10px;\n  background-color: #23B7E5;\n}\n/* .remove-todo button */\n.remove-todo {\n  display: none;\n  position: absolute;\n  top: 50%;\n  right: 10px;\n  cursor: pointer;\n  transform: translate3d(0, -50%, 0);\n}\n/* todo-item이 호버 상태이면 삭제 버튼을 활성화 */\n.todo-item:hover &gt; .remove-todo {\n  display: block;\n}\nfooter {\n  display: flex;\n  justify-content: space-between;\n  margin: 20px 0;\n}\n.complete-all, .clear-completed {\n  position: relative;\n  flex-basis: 50%;\n}\n.clear-completed {\n  text-align: right;\n  padding-right: 15px;\n}\n.btn {\n  padding: 1px 5px;\n  font-size: .8em;\n  line-height: 1.5;\n  border-radius: 3px;\n  outline: none;\n  color: #333;\n  background-color: #fff;\n  border-color: #ccc;\n  cursor: pointer;\n}\n.btn:hover {\n  color: #333;\n  background-color: #E6E6E6;\n  border-color: #ADADAD;\n}</code></pre></div>\n<h2 id=\"appjs\" style=\"position:relative;\"><a href=\"#appjs\" aria-label=\"appjs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>app.js</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">//variables\nconst $todos = document.querySelector(&#39;.todos&#39;);\nconst $inputTodo = document.querySelector(&#39;.input-todo&#39;);\nconst $completeAll = document.getElementById(&#39;ck-complete-all&#39;);\nconst $clearButton = document.querySelector(&#39;.btn&#39;);\nconst $completedTodos = document.querySelector(&#39;.completed-todos&#39;)\nconst $activeTodos = document.querySelector(&#39;.active-todos&#39;);\nconst $nav = document.querySelector(&#39;.nav&#39;);\n\n\n// const $checkBox = document.querySelector(&#39;.checkbox&#39;);\nlet todos = [];\n\n\n\n// fetch\nconst request = {\n  get(url) {\n    return fetch(url);\n  },\n  post(url, payload) {\n    return fetch(url,{\n      method: &#39;POST&#39;,\n      headers: {&#39;content-Type&#39;: &#39;application/json&#39;},\n      body: JSON.stringify(payload)\n    });\n  },\n  patch(url, payload) {\n    return fetch(url, {\n      method: &#39;PATCH&#39;,\n      headers: {&#39;content-Type&#39; : &#39;application/json&#39;},\n      body: JSON.stringify(payload)\n    });\n  },\n  delete(url) {\n    return fetch(url, {method: &#39;DELETE&#39;});\n  }\n};\n\n\n// function\n// 렌더링 함수\nconst render = () =&gt; {\n// 탭에 따른 렌더링 변화를 주기 위해 복사본에 조건에 맞는 값 할당 후 해당 복사본 렌더링\n  let _todos = [];\n  const $active = document.querySelector(&#39;.active&#39;);\n  $active.matches(&#39;#all&#39;) ? _todos = todos : ($active.matches(&#39;#active&#39;) ?\n  _todos = todos.filter(todo=&gt; !todo.completed) :\n  _todos = todos.filter(todo =&gt; todo.completed))\n\n  // todos 렌더링\n   $todos.innerHTML =\n  _todos.map(todo =&gt; {\n   return `&lt;li id=&quot;${todo.id}&quot; class=&quot;todo-item&quot;&gt;\n  &lt;input id=&quot;ck-${todo.id}&quot; class=&quot;checkbox&quot; type=&quot;checkbox&quot; ${todo.completed ? &#39;checked&#39; : &#39;&#39;}&gt;\n  &lt;label for=&quot;ck-${todo.id}&quot;&gt;${todo.content}&lt;/label&gt;\n  &lt;i class=&quot;remove-todo far fa-times-circle&quot;&gt;&lt;/i&gt;\n&lt;/li&gt;`}).join(&#39;&#39;);\n\n// 하단 완료개수, 남은 할일 개수 표시\n    $completedTodos.textContent = todos.filter(todo =&gt; todo.completed).length\n    $activeTodos.textContent = todos.filter(todo =&gt; todo.completed === false).length\n}\n\n\n\n// event\nwindow.onload = () =&gt; {\n  request.get(&#39;/todos&#39;)\n  .then(_todos =&gt; _todos.json())\n  .then(_todos =&gt; {todos = _todos} )\n  .then(render)\n  .catch(err =&gt; console.error(err));\n\n}\n// todo 입력 및 추가\n$inputTodo.onkeyup = e =&gt; {\n  if(e.key !== &#39;Enter&#39;) return;\n  request.post(&#39;/todos&#39;,{\n    id : todos.length ? Math.max(...todos.map(todo=&gt;todo.id)) + 1 : 1,\n    content: e.target.value\n    ,completed: false})\n  .then(response =&gt; response.json())\n  .then(_todos =&gt; todos = _todos)\n  .then(render)\n  .catch(err =&gt; console.error(err));\n}\n\n// todo 체크박스 체크\n$todos.onchange = e =&gt; {\n  console.log(e.target.id);\n  request.patch(`/todos/${e.target.parentNode.id}`,{\n    completed : e.target.checked\n  })\n  .then(response =&gt; response.json())\n  .then(_todos =&gt; {todos = _todos})\n  .then(render)\n  .catch(err =&gt; console.error(err));\n}\n\n// 체크박스 전부 완료표시\n$completeAll.onchange = e =&gt; {\n  request.patch(&#39;/todos/completed&#39;,{\n    completed: e.target.checked ? true : false\n  })\n  .then(response =&gt; response.json())\n  .then(_todos =&gt; todos = _todos)\n  .then(render)\n  .catch(err =&gt; console.error(err));\n}\n\n// 완료목록 삭제\n$clearButton.onclick = e =&gt; {\n  request.delete(`/todos/completed`)\n  .then(response =&gt; response.json())\n  .then(_todos =&gt; todos = _todos)\n  .then(render)\n  .catch(err =&gt; console.error(err));\n}\n\n// 탭 클릭시 활성화 변화\n$nav.onclick = e =&gt; {\n  if(!e.target.matches(&#39;.nav li&#39;)) return;\n  [...$nav.children].forEach(item =&gt; {\n    item.classList.toggle(&#39;active&#39;,e.target === item);\n  });\n  render();\n}</code></pre></div>\n<h2 id=\"serverjs\" style=\"position:relative;\"><a href=\"#serverjs\" aria-label=\"serverjs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>server.js</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const express = require(&#39;express&#39;);\nconst cors = require(&#39;cors&#39;);\n\nlet { todos } = require(&#39;./data/todos&#39;);\n\nconst app = express();\n\napp.use(cors());\napp.use(express.static(&#39;public&#39;));\napp.use(express.json()); // for parsing application/json\n\napp.get(&#39;/todos&#39;, (req, res) =&gt; {\n  res.send(todos);\n});\n\napp.get(&#39;/todos/:id&#39;, (req, res) =&gt; {\n  res.send(todos.filter(todo =&gt; todo.id === +req.params.id));\n});\n\napp.post(&#39;/todos&#39;, (req, res) =&gt; {\n  const newTodo = req.body;\n\n  if (!Object.keys(newTodo).length) {\n    return res.send({\n      error: true,\n      reason: &#39;페이로드가 없습니다. 새롭게 생성할 할일 데이터를 전달해 주세요.&#39;,\n    });\n  }\n\n  if (todos.map(todo =&gt; todo.id).includes(newTodo.id)) {\n    return res.send({\n      error: true,\n      reason: `${newTodo.id}는 이미 존재하는 id입니다.`,\n    });\n  }\n\n  todos = [newTodo, ...todos];\n  res.send(todos);\n});\n\n// 모든 할일의 completed를 일괄 변경\napp.patch(&#39;/todos/completed&#39;, (req, res) =&gt; {\n  const completed = req.body;\n\n  todos = todos.map(todo =&gt; ({ ...todo, ...completed }));\n  res.send(todos);\n});\n\napp.patch(&#39;/todos/:id&#39;, (req, res) =&gt; {\n  const id = +req.params.id;\n  const completed = req.body;\n\n  if (!todos.map(todo =&gt; todo.id).includes(id)) {\n    return res.send({\n      error: true,\n      reason: `id가 ${id}인 할일 데이터가 존재하지 않습니다.`,\n    });\n  }\n\n  todos = todos.map(todo =&gt;\n    todo.id === id ? { ...todo, ...completed } : todo\n  );\n  res.send(todos);\n});\n\n// completed가 true인 모든 할일 데이터 삭제\napp.delete(&#39;/todos/completed&#39;, (req, res) =&gt; {\n  todos = todos.filter(todo =&gt; !todo.completed);\n  res.send(todos);\n});\n\n// 아래 라우터를 DELETE &#39;/todos/completed&#39;보다 앞에 위치시키려면 url을 &#39;/todos/:id([0-9]+)&#39;로 변경한다.\napp.delete(&#39;/todos/:id&#39;, (req, res) =&gt; {\n  const id = +req.params.id;\n\n  if (!todos.map(todo =&gt; todo.id).includes(id)) {\n    return res.send({\n      error: true,\n      reason: `id가 ${id}인 할일 데이터가 존재하지 않습니다.`,\n    });\n  }\n\n  todos = todos.filter(todo =&gt; todo.id !== id);\n  res.send(todos);\n});\n\napp.listen(&#39;7000&#39;, () =&gt; {\n  console.log(&#39;Server is listening on http://localhost:7000&#39;);\n});</code></pre></div>","frontmatter":{"title":"javascript restAPI&TodoList","date":"November 10, 2020"}}},"pageContext":{"slug":"/javascript/javascript-restAPI-TodoList/","previous":{"fields":{"slug":"/javascript/javascript-newTodoList/"},"frontmatter":{"title":"javascript newTodoList","category":"javascript","draft":false}},"next":{"fields":{"slug":"/javascript/javascript-hackathon1106/"},"frontmatter":{"title":"javascript hackathon1106","category":"javascript","draft":false}}}},"staticQueryHashes":["2486386679","3128451518"]}